<!--
Copyright (C) 2006-2021 c.a.p.e. IT GmbH, https://www.cape-it.de
--
This software comes with ABSOLUTELY NO WARRANTY. For details, see
the enclosed file LICENSE for license information (GPL3). If you
did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
--
-->
<div.show-object
    class=component.getWidgetClasses()
    data-widgettype=state.widgetType
    data-instanceid=state.instanceId
    data-configurationtype=(state.widgetConfiguration ? state.widgetConfiguration.type : "")
    data-widgetid=(state.widgetConfiguration ? state.widgetConfiguration.widgetid : "")>
    <div.widget-header.show-object
        class={
            minimizable: state.minimizable
        }
        on-click("minimizeWidget", false)
        on-mousedown("headerMousedown", false)>
        <span.header-left>
            <div.widget-title class={
                "with-icon": input.icon
            }>
                <if(input.icon)>
                    <icon
                        icon=input.icon
                        on-click("minimizeWidget", true)
                        on-mousedown("headerMousedown", true)/>
                </if>
                <h2
                    title=state.title
                    on-click("minimizeWidget", true)
                    on-mousedown("headerMousedown", true)>
                    <translation-string pattern=state.title/>
                </h2>
            </div>
            <if(input.headercontent)>
                <${input.headercontent}/>
            </if>
            <if(input.headerfilter)>
                <div.widget-filter>
                    <${input.headerfilter}/>
                </div>
            </if>
        </span>
        <span.header-right>
            <action-list
                list=input.actions
                instanceId=state.instanceId
                displayText=component.getWidgetTypeActionDisplaySetting()/>
            <if(state.minimizable)>
                <span.minimize-icon-wrapper>
                    <if(state.minimized)>
                        <span.kix-icon-sort-down.as-button on-click("minimizeWidget", true)/>
                    </if>
                    <else>
                        <span.kix-icon-triangle-up.as-button on-click("minimizeWidget", true)>
                            <span.path1/>
                            <span.path2/>
                        </span>
                    </else>
                </span>
            </if>
            <if(state.closable)>
                <span.close-icon-wrapper>
                    <span.kix-icon-close.as-button on-click("closeClicked")/>
                </span>
            </if>
        </span>
    </div>
    <if(component.isLaneWidget() && !state.minimized)>
        <ul.lane-content-actions key=("content-actions" + Math.random())>
            <if(Array.isArray(input.contentActions))>
                <for|action| of=input.contentActions>
                    <li key=action.id>
                        <action action=action displayText=false/>
                    </li>
                </for>
            </if>
        </ul>
    </if>
    <if(!state.minimized)>
        <div.widget-content>
            <if(Array.isArray(input.contentActions) && input.contentActions.length)>
                <!-- TODO: ContentAction analog der "header" Actions umsetzen (Ã¼ber WidgetService) -->
                <if(component.isContentWidget())>
                    <div.content-actions key=("content-actions" + Math.random())>
                        <action-list list=input.contentActions/>
                    </div>
                </if>
            </if>
            <if(input.content)>
                <${component.isSidebarWidget() ? "div" : null} class="scroll-container">
                    <${input.content} key=state.instanceId/>
                </>
            </if>
        </div>
    </if>
</div>
