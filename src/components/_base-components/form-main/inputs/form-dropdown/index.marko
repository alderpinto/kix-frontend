<div.dropdown dropDownId=state.dropdownId>
    <div.dropdown-input-container class={"list-shown": state.expanded}>
        <if(state.selectedItem)>
            <div.input-style class={"read-only": !state.enabled} on-click('toggleList', false)>
                <span.selected-item-container>
                    <div.selected-item>
                        <icon icon=state.selectedItem.icon showUnknown=true/>
                        <span.item-text>${state.selectedItem.label}</span>
                        <if(state.selectedItem.secondaryIcon)>
                            <icon icon=state.selectedItem.secondaryIcon showUnknown=true/>
                        </if>
                        <span.kix-icon-close on-click('removeSelectedItem')/>
                    </div>
                </span>
            </div>
        </if>
        <else>
            <input.input-style type="text" readonly=(!state.enabled) placeholder=input.placeholder value=state.filterValue
                on-keydown('keyDown') on-keyup('filterValueChanged') required=input.required
                on-click('toggleList', false)/>
        </else>
        <span.dropdown-button.kix-icon-sort-down on-click('toggleList')/>
    </div>
    <if(state.expanded)>
        <ul.dropdown-list>
            <for(item in state.filteredItems)>
                <li.dropdown-item id=((state.dropdownId + "-item-") + item.id) on-click('itemSelected', item)
                    on-mousemove('itemHovered', item) class=(component.isSelected(item) ? "active" : "")>
                    <icon icon=item.icon showUnknown=true/>
                    ${item.label}
                    <if(item.secondaryIcon)>
                        <icon icon=item.secondaryIcon showUnknown=true/>
                    </if>
                </li>
            </for>
        </ul>
    </if>
</div>
