<div.dropdown-auto-complete dropDownId=state.dropdownId on-click('setKeepExpanded') key="dropdown-input-container">
    <div.dropdown-input-container class={"list-shown": state.expanded}>
        <input.input-style type="text" class={invalid: state.invalid} readonly=(!state.enabled) disabled=(!state.enabled)
            placeholder=(state.selectedItem ? "" : input.placeholder) value=state.searchValue on-keydown('keyDown')
            on-keyup('searchValueChanged') required=input.required on-click('toggleList', false)
            on-focus('toggleList', false) on-blur('focusLost') key="dropdown-auto-complete-input"/>
        <if(state.selectedItem)>
            <span.selected-item-container on-click('toggleList', false)>
                <div.selected-item>
                    <icon icon=state.selectedItem.icon showUnknown=true/>
                    <span.item-text>${state.selectedItem.label}</span>
                    <if(state.selectedItem.secondaryIcon)>
                        <icon icon=state.selectedItem.secondaryIcon showUnknown=true/>
                    </if>
                    <span.kix-icon-close on-click('removeSelectedItem')/>
                </div>
            </span>
        </if>
    </div>
    <if(state.expanded || state.isLoading)>
        <ul.dropdown-list style=state.dropdownListStyle key="dropdown-list">
            <if(state.isLoading)>
                <li.loading-item>
                    <loading-spinner/>
                </li>
            </if>
            <else-if(state.items && state.items.length)>
                <for(item in state.items)>
                    <li.dropdown-item id=((state.dropdownId + "-item-") + item.id) on-click('itemSelected', item)
                        on-mousemove('itemHovered', item) class=(component.isSelected(item) ? "active" : "")>
                        <icon icon=item.icon showUnknown=true/>
                        ${item.label}
                        <if(item.secondaryIcon)>
                            <icon icon=item.secondaryIcon showUnknown=true/>
                        </if>
                    </li>
                </for>
            </else-if>
            <else>
                <li.dropdown-item>
                    <span>
                        Keine Ansprechpartner gefunden (mind. ${state.autoCompleteConfiguration.charCount} Zeichen f√ºr die Suche eingeben)
                    </span>
                </li>
            </else>
        </ul>
    </if>
</div>
