<for|dynamicValue, index| of=state.dynamicValues>
    <div.dynamic-form-field-value class={
        "no-operation": dynamicValue.operationIsNone
    }>
        <form-list
            nodes=dynamicValue.propertyNodes
            selectedNodes=[dynamicValue.currentPropertyNode]
            removeNode=false
            readonly=dynamicValue.readonly
            placeholder=dynamicValue.propertiesPlaceholder
            on-nodesChanged("propertyChanged", dynamicValue)/>
        <if(!dynamicValue.operationIsNone)>
            <if(dynamicValue.operationIsStringInput)>
                <input.input-style
                    value=(dynamicValue.currentOperationNode ? dynamicValue.currentOperationNode.id : "")
                    type="text"
                    disabled=dynamicValue.readonly
                    readonly=dynamicValue.readonly
                    placeholder=dynamicValue.operationsPlaceholder
                    on-input("operationStringChanged", dynamicValue)/>
            </if>
            <else>
                <form-list
                    nodes=dynamicValue.operationNodes
                    selectedNodes=[dynamicValue.currentOperationNode]
                    removeNode=false
                    readonly=dynamicValue.readonly
                    autocomplete=dynamicValue.opertationIsAutocomplete
                    searchCallback=(dynamicValue.opertationIsAutocompete ? dynamicValue.operationAutoCompleteData.searchCallback : null)
                    autoCompleteConfiguration=(dynamicValue.opertationIsAutocompete ? dynamicValue.operationAutoCompleteData.configuration : null)
                    freeText=(dynamicValue.opertationIsAutocomplete ? dynamicValue.operationAutoCompleteData.isFreeText : null)
                    placeholder=dynamicValue.operationsPlaceholder
                    on-nodesChanged("operationChanged", dynamicValue)/>
            </else>
        </if>
        <div.value>
            <if(
                dynamicValue.currentPropertyNode &&
                (dynamicValue.currentOperationNode || dynamicValue.operationIsNone) &&
                component.showValueInput(dynamicValue)
            )>
                <if(dynamicValue.isDropdown)>
                    <form-list
                        nodes=dynamicValue.nodes
                        selectedNodes=dynamicValue.currentValueNodes
                        removeNode=(!dynamicValue.readonly || dynamicValue.changeable)
                        readonly=dynamicValue.readonly
                        multiselect=dynamicValue.isMultiselect
                        autocomplete=dynamicValue.isAutocomplete
                        searchCallback=dynamicValue.autoCompleteCallback
                        on-nodesChanged("treeValueChanged", dynamicValue)/>
                </if>
                <else-if(dynamicValue.isDate)>
                    <input.input-style
                        type="date"
                        value=dynamicValue.date
                        disabled=(dynamicValue.readonly && !dynamicValue.changeable)
                        on-change("dateValueChanged", dynamicValue)/>
                </else-if>
                <else-if(dynamicValue.isDateTime)>
                    <input.input-style
                        type="date"
                        value=dynamicValue.date
                        disabled=(dynamicValue.readonly && !dynamicValue.changeable)
                        on-change("dateValueChanged", dynamicValue)/>
                    <input.input-style
                        type="time"
                        value=dynamicValue.time
                        disabled=(dynamicValue.readonly && !dynamicValue.changeable)
                        on-change("timeValueChanged", dynamicValue)/>
                </else-if>
                <else-if(dynamicValue.isTextarea)>
                    <textarea.input-style
                        rows=5
                        cols=25
                        value=dynamicValue.currentValue
                        maxlength=component.getInputOptionValue(dynamicValue, "maxLength")
                        disabled=(dynamicValue.readonly && !dynamicValue.changeable)
                        on-input("textValueChanged", dynamicValue)/>
                </else-if>
                <else-if(dynamicValue.isSpecificInput)>
                    <${dynamicValue.specificInputType}
                        propertyId=(dynamicValue.currentPropertyNode ? dynamicValue.currentPropertyNode.id : null)
                        operationId=(dynamicValue.currentOperationNode ? dynamicValue.currentOperationNode.id : null)
                        value=dynamicValue.currentValue
                        disabled=(dynamicValue.readonly && !dynamicValue.changeable)
                        options=dynamicValue.inputOptions
                        on-change("specificValueChanged", dynamicValue)/>
                </else-if>
                <else>
                    <input.input-style
                        value=dynamicValue.currentValue
                        type="text"
                        disabled=(dynamicValue.readonly && !dynamicValue.changeable)
                        on-input("textValueChanged", dynamicValue)/>
                </else>
            </if>
        </div>
        <if(!dynamicValue.readonly && state.dynamicValues.length > 1 && index !== state.dynamicValues.length - 1)>
            <button.form-control-button.button-without-text
                type="button"
                title="Translatable#Parameter entfernen"
                on-click("removeValue", dynamicValue)>
                <span.kix-icon-minus/>
            </button>
        </if>
    </div>
</for>
