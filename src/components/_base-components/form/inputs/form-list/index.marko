<div.form-list on-click("setKeepExpanded") key=state.listId>
    <div.form-list-input-container.input-style
        class={
                "list-shown": state.expanded,
                autocomplete: state.asAutocomplete,
                invalid: state.invalid
            }
        key=("form-list-input-container-" + state.listId)
        title=input.placeholder
        on-click("toggleList", false)>
        <if(state.selectedNodes.length === 0)>
            <input.input-style
                type="text"
                class={
                                invalid: state.invalid
                            }
                readonly=state.readonly
                disabled=state.readonly
                placeholder=input.placeholder/>
        </if>
        <else>
            <div.selected-nodes key=("form-list-selected-nodes-" + state.listId)>
                <for(node in state.selectedNodes)>
                    <div.selected-node title=node.label key=("form-list-selected-node-" + state.listId + "[]")>
                        <icon icon=node.icon showUnknown=true/>
                        <span.item-text>${node.label}</span>
                        <if(node.secondaryIcon)>
                            <icon icon=node.secondaryIcon showUnknown=true/>
                        </if>
                        <if(state.removeNode)>
                            <span.kix-icon-close on-click("removeSelectedItem", node)/>
                        </if>
                    </div>
                </for>
            </div>
        </else>
        <span.form-list-button.kix-icon-sort-down on-click("listToggleButtonClicked")/>
    </div>
    <if(state.expanded)>
        <if(state.isLoading)>
            <div.form-list-loading>
                <loading-spinner/>
            </div>
        </if>
        <else-if(state.nodes)>
            <div.value-list style=state.treeStyle key=("value-list-" + state.treeId)>
                <input.input-style
                    type="text"
                    placeholder=(state.asAutocomplete ? "Suchbegriff eingeben" : "Filtern in Liste")
                    value=(state.asAutocomplete ? state.autocompleteSearchValue : state.filterValue)
                    key=("form-list-input-" + state.listId)
                    on-keydown("keyDown")
                    on-keyup("keyUp")/>
                <if(state.asAutocomplete && state.nodes.length === 0)>
                    <div.form-list-autocomplete-no-results>
                        <span>${component.getAutocompleteNotFoundText()}</span>
                    </div>
                </if>
                <else>
                    <form-list-tree
                        key=state.treeId
                        nodes=state.nodes
                        filterValue=state.filterValue
                        activeNodes=state.selectedNodes
                        on-nodeToggled("nodeToggled")
                        on-nodeClicked("nodeClicked")/>
                    <if(state.asMultiselect)>
                        <div.button-bar key="buttonbar">
                            <button.submit-button type="button" on-click("submit") title="Bestätigen">
                                <span.kix-icon-check/>
                                Bestätigen
                            </button>
                            <span on-click("selectAll")>
                                <input.select-all-Checkbox type="checkbox" key="selectAllCheckbox"/>Alle auswählen
                            </span>
                        </div>
                    </if>
                </else>
            </div>
        </else-if>
    </if>
</div>
