<!--
Copyright (C) 2006-2019 c.a.p.e. IT GmbH, https://www.cape-it.de
--
This software comes with ABSOLUTELY NO WARRANTY. For details, see
the enclosed file LICENSE for license information (GPL3). If you
did not receive this file, see https://www.gnu.org/licenses/gpl-3.0.txt.
--
-->

<li.tree-node
    class={
        active: component.isNodeActive() | component.hasActiveChild()
    }
    id=state.nodeId
    key=state.nodeId>
    <span.tree-icon>
        <if(component.hasChildren())>
            <span id="tree-expand" class=(state.node.expanded ? "kix-icon-minus" : "kix-icon-plus-blank") on-click("toggleNode")/>
        </if>
    </span>
    <div.node-value on-mousemove("nodeHovered") on-click("nodeClicked") title=component.getLabel()>
        <if(state.node.icon)>
            <icon icon=state.node.icon showUnknown=true/>
        </if>
        <span.node-title class=(state.node.expanded ? "expanded" : "")>
            ${state.node.label}<if(state.node.properties)>
                &nbsp;
                (<for|prop, index| of=state.node.properties>
                    <if(index != 0)>|</if>
                    <span title=prop.title class=(prop.cssClass ? prop.cssClass : "")>${prop.value}</span>
                </for>)
            </if>
        </span>
        <if(state.node.secondaryIcon)>
            <icon icon=state.node.secondaryIcon/>
        </if>
    </div>
    <if(state.node.expanded)>
        <ul.tree-list>
            <for|node| of=state.node.children>
                <if(node.visible)>
                    <tree-node
                        node=node
                        filterValue=state.filterValue
                        activeNode=state.activeNode
                        treeParent=input.treeParent
                        treeId=state.treeId
                        on-nodeToggled("childNodeToggled")
                        on-nodeClicked("childNodeClicked")
                        on-nodeHovered("childNodeHovered")/>
                </if>
            </for>
        </ul>
    </if>
</li>
