<div.bar-icon class=[component.isConfigMode() || state.showDashboardConfigurationWidget ? "config-mode" : "", component.isConfigDialogShown() ? "config-dialog-shown" : ""]>
    <span.kix-icon-gear class=(state.showDashboardConfigurationWidget ? "" : "icon-asterisk")
        on-click('toggleDashboardConfigurationWidget')/>
</div>
<if(state.translations && state.showDashboardConfigurationWidget)>
    <div.dashboard-configuration-widget>
        <widget minimizable=false hasConfigOverlay=false>
            <@title>
                <span.kix-icon.icon-dummy.icon-asterisk/>Widgets verwalten
            </@title>
            <@content>
                <if(component.isConfigMode())>
                    <h4>Home Dashboard</h4>
                    <!-- TODO: korrekten Dashboard-Namen (home, ticket, ...) und dessen Übersetzung bestimmen, ggf. von Eltern-Komponente (input.name) -->
                    <!-- <h4>${component.getTranslation(component.translationIds.DASHBOARD_NAME)}</h4> -->
                    Widgets hinzufügen oder entfernen:
                    <button on-click('openDashboardConfigurationDialog')>Auswahl der Widgets</button>
                    <span.kix-icon.icon-dummy.icon-i/>Die angezeigten Widgets können mittels Drag & Drop verschoben werden.
                    <hr/>
                    <button on-click('toggleConfigurationMode')>Konfiguration beenden</button>
                </if>
                <else>
                    Hier können Sie die angezeigten Widgets anpassen (z.B. hinzufügen, entfernen, konfigurieren sowie deren Position verändern).
                    <button on-click('toggleConfigurationMode')>Konfiguration starten</button>
                </else>
            </@content>
        </widget>
    </div>
</if>
